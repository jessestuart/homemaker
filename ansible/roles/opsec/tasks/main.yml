---
- name: Ensure fail2ban is installed.
  package: name=fail2ban state=latest
  notify:
    - Restart fail2ban

- name: Ensure ufw is installed.
  package: name=ufw state=latest

- name: Configure ufw defaults
  ufw: direction={{ item.direction }} policy={{ item.policy }}
  with_items:
    - { direction: 'incoming', policy: 'deny' }
    - { direction: 'outgoing', policy: 'allow' }
  notify:
    - Restart ufw

- name: Configure ufw rules
  ufw: rule={{ item.rule }} port={{ item.port }} proto={{ item.proto }}
  with_items:
    - { rule: 'limit', port: '{{ ssh_port | default("22") }}', proto: 'tcp' }
    - { rule: 'allow', port: '80', proto: 'tcp' }
    - { rule: 'allow', port: '443', proto: 'tcp' }
  notify:
    - Restart ufw

- name: Enable ufw logging
  ufw: logging=on
  notify:
    - Restart ufw

- name: Enable ufw
  ufw: state=enabled

# ====================================================================
# To protect against man-in-the-middle attacks, at least use the local
# (control) machine to find the right github RSA public key.
# ====================================================================
- name: Ensure GitHub is a known host
  lineinfile:
    dest: /etc/ssh/ssh_known_hosts
    create: yes
    state: present
    line: "{{ lookup('pipe', 'ssh-keyscan -t rsa github.com') }}"
    regexp: "^github\\.com"

# =====================================
# Accept SSH env variables for AWS CLI.
# =====================================
- name: Add AcceptEnv to /etc/ssh/sshd_config
  lineinfile:
    dest: /etc/ssh/sshd_config
    create: yes
    state: present
    line: 'AcceptEnv AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_DEFAULT_REGION #AWS Creds'
    regexp: '#AWS Creds'
  when: ansible_virtualization_type != 'docker'
  notify:
    - Restart ssh service

# Set the hostname as specified in the inventory.
- name: Set /etc/hostname
  become: yes
  tags: hostname
  hostname: name="{{ hostname }}"
  when: ansible_virtualization_type != 'docker'

# This is required to be in sync because many commands, such as sudo,
# may fail otherwise.
- name: Register hostname in /etc/hosts
  tags: hostname
  when: ansible_virtualization_type != 'docker'
  lineinfile:
    state: present
    dest: /etc/hosts
    regexp: '127.0.0.1'
    line: "127.0.0.1 localhost {{ hostname }}"

# - name: Remove root public keys
#   file:
#     state: absent
#     path: /root/.ssh/authorized_keys

# - name: Deny root login
#   lineinfile:
#     state: present
#     dest: /etc/ssh/sshd_config
#     regexp: PermitRootLogin
#     line: 'PermitRootLogin no'
#   notify:
#     - Restart ssh service
