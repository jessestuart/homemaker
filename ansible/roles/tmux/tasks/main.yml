---
- name: Register desired tmux version.
  set_fact:
    tmux_version: 2.6

- name: Determine tmux version, if installed.
  shell: tmux -V | sed 's/tmux //' || false
  register: tmux_installed_version
  ignore_errors: yes
  changed_when: no

- name: End play if tmux is already up-to-date.
  meta: end_play
  when: tmux_installed_version is defined and tmux_installed_version.stdout == tmux_version

- name: Ensure tmux dependencies are installed.
  become: yes
  package:
    name: "{{ item }}"
    state: latest
    update_cache: yes
  with_items:
    - gcc

- name: Ensure Debian-specific dependencies are installed.
  package:
    name: "{{ item }}"
    state: latest
  when: ansible_os_family == 'Debian'
  with_items:
    - libevent-dev
    - libncurses5-dev
    - libncursesw5-dev
    - ncurses-base

- name: Ensure CentOS-specific tmux dependencies are installed.
  become: yes
  package:
    name: "{{ item }}"
    state: latest
    update_cache: yes
  with_items:
    - libevent-devel
    - ncurses-devel
  when: ansible_distribution == 'CentOS'

- name: Pull down tmux release from GitHub.
  become: yes
  get_url:
    url: "https://github.com/tmux/tmux/releases/download/{{ tmux_version }}/tmux-{{ tmux_version }}.tar.gz"
    dest: "/tmp/tmux-{{ tmux_version }}.tar.gz"

- name: Create temp installation directory.
  file:
    name: "/tmp/tmux-{{ tmux_version }}"
    state: directory

- name: Unarchive tmux tarball.
  become: yes
  unarchive:
    src: "/tmp/tmux-{{ tmux_version }}.tar.gz"
    dest: /tmp
    remote_src: yes

- name: Install tmux.
  become: yes
  shell: |
    cd "/tmp/tmux-{{ tmux_version }}" && \
    LDFLAGS="-L/usr/local/lib -Wl,-rpath=/usr/local/lib" \
    ./configure --prefix=/usr/local && \
    make && \
    make install

- name: Cleanup tmux installation files.
  file:
    name: "{{ item }}"
    state: absent
  with_items:
    - "/tmp/tmux-{{ tmux_version }}"
    - "/tmp/tmux-{{ tmux_version }}.tar.gz"
