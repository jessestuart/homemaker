---
version: 2

jobs:
  build:
    working_directory: /home/vagrant
    docker:
      - image: jessestuart/vagrant-build-base:latest
    environment:
      # yamllint disable-line
      - IMAGE_ID: "672278003389.dkr.ecr.us-east-1.amazonaws.com/jessestuart/homemaker"

    steps:
      - checkout

      - setup_remote_docker

      - run:
          name: Link Developer Workstation Cache
          command: |
            set -x
            if [ -z "$CIRCLE_BUILD_NUM" ]; then
              mkdir -p /home/vagrant/cache/vagrant
              ln -sf  /home/vagrant/cache/vagrant \
                /home/vagrant/.vagrant/machines/default/cache
            fi

      # This cache is for the docker images. Layer caching is early, so we use
      # a tarball created by `docker save` to cache our images.
      - restore_cache:
          keys:
            - v1-dockerimage-{{ .Branch }}-{{ .Revision }}
            - v1-dockerimage-{{ .Branch }}-
            - v1-dockerimage-

      - run:
          name: Restore Docker Public Image Cache
          command: |
            set -x
            if [[ -e /home/vagrant/cache/docker/image.tar ]]; then
              docker load -i /home/vagrant/cache/docker/image.tar
            fi

      - run:
          name: Install vagrant plugins.
          command: |
            vagrant plugin install vagrant-hostmanager
            vagrant plugin install vagrant-cachier

      - run:
          command: ansible-galaxy install -r ansible/requirements.yml

      - run:
          command: docker pull alpine/socat:latest

      # The 'test' here is that Vagrant can build the box. We should add more
      # steps after this to ensure the software we installed is in working
      # order.
      # We are adding '--provision' for testing locally and iterating.
      - run:
          name: Build Vagrant box and test Ansible Playbook.
          command: |
            eval $(ssh-agent)
            vagrant up docker --provision

      - run:
          name: Build Docker Public Image Cache
          command: |
            mkdir -p /home/vagrant/cache/docker
            IMGS=$(docker images | grep -v 'REPOSITORY\|none' | cut -d ' ' -f 1)
            docker save $IMGS > /home/vagrant/cache/docker/image.tar

      - save_cache:
          key: v1-dockerimage-{{ .Branch }}-{{ checksum "Vagrantfile" }}
          paths:
            - /home/vagrant/cache/docker

      - run:
          name: Commit Vagrant box to a Docker image.
          command: |
            docker commit $(docker ps -l -q) jessestuart/homemaker

      - run:
          name: Push Docker image to ECR.
          command: |
            eval $(aws ecr get-login --no-include-email --region us-east-1)
            docker push jessestuart/homemaker
