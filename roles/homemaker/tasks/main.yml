---
- name: Install yarn repo.
  become: yes
  yum_repository:
    name: yarn
    description: Yarn repo
    baseurl: https://dl.yarnpkg.com/rpm/yarn.repo

- name: Install ripgrep repo.
  become: yes
  shell: |
    yum-config-manager --add-repo=https://copr.fedorainfracloud.org/coprs/carlwgeorge/ripgrep/repo/epel-7/carlwgeorge-ripgrep-epel-7.repo

  # yum_repository:
  #   name: ripgrep
  #   description: rg repo
  #   baseurl: https://copr.fedorainfracloud.org/coprs/carlwgeorge/ripgrep/repo/epel-7/carlwgeorge-ripgrep-epel-7.repo

- name: Install the nice things.
  yum:
    name: "{{ item }}"
    state: latest
    update_cache: yes
  with_items:
    - go
    - mosh
    - neovim
    - nodejs
    - ripgrep
    - rsync
    - yarn

- name: Own `node_modules`
  become: yes
  shell: "chown -R {{ user }} /usr/lib/node_modules"

- name: Start docker daemon at boot.
  systemd:
    name: docker
    enabled: yes
  when: ansible_distribution == 'CentOS'
  # shell: rc-update add docker boot

- name: Update PATH.
  tags: rcm
  become: yes
  become_user: "{{ user }}"
  lineinfile:
    dest: /etc/environment
    state: present
    backrefs: yes
    regexp: PATH="$PATH:/usr/local/bin"
    line: PATH="$PATH:/usr/local/bin"

# - name: Download GTM.
#   get_url:
#     url: https://github.com/git-time-metric/gtm/releases/download/v1.2.11/gtm.v1.2.11.linux.tar.gz
#     dest: /tmp

# - name: Extract GTM.
#   become: yes
#   unarchive:
#     src: /tmp/gtm

- name: Determine if RCM is installed.
  shell: if (hash lsrc &>/dev/null); then echo 1; else echo 0; fi
  register: rcm_installed
  ignore_errors: yes
  tags: rcm

- name: Pull down Thoughtbot's RCM to manage dotfiles.
  tags: rcm
  become: yes
  become_user: "{{ user }}"
  get_url:
    url: https://thoughtbot.github.io/rcm/dist/rcm-1.3.1.tar.gz
    dest: "$HOME"
  # when: not rcm_installed

- name: Install RCM.
  become: yes
  tags: rcm
  shell:
    tar -xvf "$HOME/rcm-1.3.1.tar.gz" && \
    cd rcm-1.3.1 && \
    ./configure && \
    make && \
    make install
  # when: not rcm_installed

# - name: Determine if dotfiles directory exists.
#   become_user: "{{ user }}"
#   shell: ls "$HOME/dotfiles" &>/dev/null
#   register: dotfiles_cloned
#   ignore_errors: yes

- name: Pull dotfiles.
  become: yes
  become_user: "{{ user }}"
  tags: rcm
  git:
    repo: https://github.com/jessestuart/dotfiles
    dest: "$HOME/dotfiles"
  # when: not dotfiles_cloned

- name: Create vim plug directory.
  become: yes
  become_user: "{{ user }}"
  file:
    path: "$HOME/.local/share/nvim/site/autoload/plug.vim"
    state: directory
    owner: "{{ user }}"

- name: Install vim plug.
  become: yes
  become_user: "{{ user }}"
  tags:
    - deps
    - vim
  get_url:
    url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    dest: "$HOME/.local/share/nvim/site/autoload"
    owner: "{{ user }}"
    force: yes

- name: UNLEASH THE DOTFILES!
  become: yes
  become_user: "{{ user }}"
  shell: |
    cd "$HOME/dotfiles" && \
    rcup -d . && \
    source "$HOME/.zshrc"

- name: Install vim plugins.
  become: yes
  become_user: "{{ user }}"
  shell: nvim -e +PlugInstall +qall




